{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hjund\\\\dig4639-mobile-dev\\\\demo\\\\w13b\\\\screens\\\\TODOScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nexport default function TODOScreen() {\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.imageStyle,\n    source: require(\"../assets/images/Commons-Cat.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.boxSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.boxSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.boxSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.boxLarge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.boxSmall,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.boxLarge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction OptionButton(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label,\n      onPress = _ref.onPress,\n      isLastOption = _ref.isLastOption;\n  return React.createElement(RectButton, {\n    style: [styles.option, isLastOption && styles.lastOption],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0,0.35)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, label))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  imageStyle: {\n    width: Dimensions.get(\"window\").width,\n    height: 685 / 1024 * Dimensions.get(\"window\").width\n  },\n  boxSmall: {\n    width: 200,\n    height: 200,\n    marginBottom: 10,\n    marginRight: 10,\n    backgroundColor: 'skyblue'\n  },\n  boxLarge: {\n    width: 300,\n    height: 300,\n    marginBottom: 10,\n    marginRight: 10,\n    backgroundColor: 'steelblue'\n  }\n});","map":{"version":3,"sources":["C:/Users/hjund/dig4639-mobile-dev/demo/w13b/screens/TODOScreen.js"],"names":["Ionicons","WebBrowser","React","RectButton","ScrollView","TODOScreen","styles","container","imageStyle","require","boxSmall","boxLarge","OptionButton","icon","label","onPress","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","StyleSheet","create","flex","width","Dimensions","get","height","marginBottom","marginRight","backgroundColor"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as React from 'react';\r\nimport { Dimensions, StyleSheet, Text, View, Image } from 'react-native';\r\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\r\n\r\nexport default function TODOScreen() {\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n        <Image style={styles.imageStyle}\r\n          source={require('../assets/images/Commons-Cat.png')}\r\n        />\r\n        <ScrollView horizontal>\r\n          <View style={styles.boxSmall} />\r\n          <View style={styles.boxSmall} />\r\n          <View style={styles.boxSmall} />\r\n        </ScrollView>\r\n        <View style={styles.boxLarge} />\r\n        <View style={styles.boxSmall} />\r\n        <View style={styles.boxLarge} />\r\n      </ScrollView>\r\n  );\r\n}\r\n\r\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\r\n  return (\r\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        <View style={styles.optionIconContainer}>\r\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\r\n        </View>\r\n        <View style={styles.optionTextContainer}>\r\n          <Text style={styles.optionText}>{label}</Text>\r\n        </View>\r\n      </View>\r\n    </RectButton>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  imageStyle: {\r\n    width:Dimensions.get(\"window\").width,\r\n    height:(685/1024)*Dimensions.get(\"window\").width\r\n  },\r\n  boxSmall: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: 10,\r\n    marginRight: 10,\r\n    backgroundColor: 'skyblue',\r\n  },\r\n  boxLarge: {\r\n    width: 300,\r\n    height: 300,\r\n    marginBottom: 10,\r\n    marginRight: 10,\r\n    backgroundColor: 'steelblue',\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}